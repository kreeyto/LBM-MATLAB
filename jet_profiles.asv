clc; clearvars; close all

% === diretórios de cada caso ===
base_paths = {
    fullfile(getenv('HOME'),'Desktop','MULTIC-TS-LBM','bin','D3Q19','100'),   % We = 100
    fullfile(getenv('HOME'),'Desktop','MULTIC-TS-LBM','bin','D3Q19','500'),   % We = 500
    fullfile(getenv('HOME'),'Desktop','MULTIC-TS-LBM','bin','D3Q19','2500')   % We = 2500
};

we_labels = {'$We=100$','$We=500$','$We=2500$'};
colors = {'r','g','b'};
z_target = 8 * 10;  % posição axial para todos os casos
U_inflow = 0.05;

% === dimensões do domínio ===
[NX,NY,NZ] = deal(64,64,256);
xc = round((NX-1)/2);
yc = round((NY-1)/2);

% === armazenamento de perfis e campos médios ===
r_profiles = cell(1,3);
uz_profiles = cell(1,3);
uz_planes = cell(1,3);  % para armazenar uz_mean(:,:,xc+1)

for k = 1:3
    files = dir(fullfile(base_paths{k}, '*_uz*.bin'));
    nfiles = numel(files);

    uz_stack = nan(NZ,NY,NX,nfiles);
    for f = 1:nfiles
        fname = fullfile(base_paths{k}, files(f).name);
        fid = fopen(fname,'rb');
        raw = fread(fid,'float32=>float32');
        fclose(fid);
        uz = reshape(raw,[NX,NY,NZ]);
        uz = permute(uz,[3,2,1]);  
        uz_stack(:,:,:,f) = uz;
    end

    uz_mean = mean(uz_stack,4,'omitnan');
    uz_planes{k} = squeeze(uz_mean(:,:,xc+1)) / U_inflow;

    uz_profile = uz_mean(z_target+1,:,xc+1);  
    Uc = max(uz_profile);

    r = abs((0:NY-1)-yc);  
    half = yc+1:NY;
    r_over_z = r(half) / z_target;
    uz_half = uz_profile(half) / Uc;
    %valid = uz_half > 0;

    r_profiles{k} = r_over_z(uz_half);
    uz_profiles{k} = uz_half(valid);
end

%% === três planos (z,y) lado a lado ===
figure('Name','time-averaged velocity planes','Position',[100 100 1200 360])
for k = 1:3
    subplot(1,3,k)
    imagesc(uz_planes{k})
    set(gca,'YDir','normal')
    colormap(hot)
    axis equal tight
    hold on
    yline(z_target+1, 'w--', 'LineWidth', 2.0)
    axis off
end
colorbar('Position',[0.92 0.12 0.015 0.75])

%% === plot sobreposto (self-similarity) ===
figure('Name','self-similarity','Position',[600 200 500 400]); hold on
for k = 1:3
    plot(r_profiles{k}, uz_profiles{k}, ...
        'LineWidth', 2, 'Color', colors{k}, 'DisplayName', we_labels{k});
end
xlabel('$r/z$','Interpreter','latex')
ylabel('$u_z/U_c$','Interpreter','latex')
legend('Interpreter','latex','Location','northeast')
grid on
ylim([0 1.1])
